Grammar

    0 $accept: program $end

    1 program: SIMPLE DL SL END

    2 DL: DL D
    3   | D

    4 D: type ':' ID ';'

    5 type: INT
    6     | FLOAT

    7 block: '{' SL '}'
    8      | S

    9 SL: S SL
   10   | S

   11 S: ID '=' E ';'
   12  | WHILE ce block
   13  | IF ce block
   14  | GET ID ';'

   15 ce: '(' E RELOP E ')'

   16 E: E '+' T
   17  | T

   18 T: T '*' F
   19  | F

   20 F: NUM
   21  | ID
   22  | '(' E ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 22
')' (41) 15 22
'*' (42) 18
'+' (43) 16
':' (58) 4
';' (59) 4 11 14
'=' (61) 11
'{' (123) 7
'}' (125) 7
error (256)
SIMPLE (258) 1
END (259) 1
IF (260) 13
WHILE (261) 12
GET (262) 14
INT (263) 5
FLOAT (264) 6
NUM (265) 20
ID (266) 4 11 14 21
RELOP (267) 15


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
program (23)
    on left: 1, on right: 0
DL (24)
    on left: 2 3, on right: 1 2
D (25)
    on left: 4, on right: 2 3
type (26)
    on left: 5 6, on right: 4
block (27)
    on left: 7 8, on right: 12 13
SL (28)
    on left: 9 10, on right: 1 7 9
S (29)
    on left: 11 12 13 14, on right: 8 9 10
ce (30)
    on left: 15, on right: 12 13
E (31)
    on left: 16 17, on right: 11 15 16 22
T (32)
    on left: 18 19, on right: 16 17 18
F (33)
    on left: 20 21 22, on right: 18 19


State 0

    0 $accept: . program $end

    SIMPLE  shift, and go to state 1

    program  go to state 2


State 1

    1 program: SIMPLE . DL SL END

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    DL    go to state 5
    D     go to state 6
    type  go to state 7


State 2

    0 $accept: program . $end

    $end  shift, and go to state 8


State 3

    5 type: INT .

    $default  reduce using rule 5 (type)


State 4

    6 type: FLOAT .

    $default  reduce using rule 6 (type)


State 5

    1 program: SIMPLE DL . SL END
    2 DL: DL . D

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    GET    shift, and go to state 11
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    ID     shift, and go to state 12

    D     go to state 13
    type  go to state 7
    SL    go to state 14
    S     go to state 15


State 6

    3 DL: D .

    $default  reduce using rule 3 (DL)


State 7

    4 D: type . ':' ID ';'

    ':'  shift, and go to state 16


State 8

    0 $accept: program $end .

    $default  accept


State 9

   13 S: IF . ce block

    '('  shift, and go to state 17

    ce  go to state 18


State 10

   12 S: WHILE . ce block

    '('  shift, and go to state 17

    ce  go to state 19


State 11

   14 S: GET . ID ';'

    ID  shift, and go to state 20


State 12

   11 S: ID . '=' E ';'

    '='  shift, and go to state 21


State 13

    2 DL: DL D .

    $default  reduce using rule 2 (DL)


State 14

    1 program: SIMPLE DL SL . END

    END  shift, and go to state 22


State 15

    9 SL: S . SL
   10   | S .

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    GET    shift, and go to state 11
    ID     shift, and go to state 12

    $default  reduce using rule 10 (SL)

    SL  go to state 23
    S   go to state 15


State 16

    4 D: type ':' . ID ';'

    ID  shift, and go to state 24


State 17

   15 ce: '(' . E RELOP E ')'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 28
    T  go to state 29
    F  go to state 30


State 18

   13 S: IF ce . block

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    GET    shift, and go to state 11
    ID     shift, and go to state 12
    '{'    shift, and go to state 31

    block  go to state 32
    S      go to state 33


State 19

   12 S: WHILE ce . block

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    GET    shift, and go to state 11
    ID     shift, and go to state 12
    '{'    shift, and go to state 31

    block  go to state 34
    S      go to state 33


State 20

   14 S: GET ID . ';'

    ';'  shift, and go to state 35


State 21

   11 S: ID '=' . E ';'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 36
    T  go to state 29
    F  go to state 30


State 22

    1 program: SIMPLE DL SL END .

    $default  reduce using rule 1 (program)


State 23

    9 SL: S SL .

    $default  reduce using rule 9 (SL)


State 24

    4 D: type ':' ID . ';'

    ';'  shift, and go to state 37


State 25

   20 F: NUM .

    $default  reduce using rule 20 (F)


State 26

   21 F: ID .

    $default  reduce using rule 21 (F)


State 27

   22 F: '(' . E ')'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 38
    T  go to state 29
    F  go to state 30


State 28

   15 ce: '(' E . RELOP E ')'
   16 E: E . '+' T

    RELOP  shift, and go to state 39
    '+'    shift, and go to state 40


State 29

   17 E: T .
   18 T: T . '*' F

    '*'  shift, and go to state 41

    $default  reduce using rule 17 (E)


State 30

   19 T: F .

    $default  reduce using rule 19 (T)


State 31

    7 block: '{' . SL '}'

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    GET    shift, and go to state 11
    ID     shift, and go to state 12

    SL  go to state 42
    S   go to state 15


State 32

   13 S: IF ce block .

    $default  reduce using rule 13 (S)


State 33

    8 block: S .

    $default  reduce using rule 8 (block)


State 34

   12 S: WHILE ce block .

    $default  reduce using rule 12 (S)


State 35

   14 S: GET ID ';' .

    $default  reduce using rule 14 (S)


State 36

   11 S: ID '=' E . ';'
   16 E: E . '+' T

    ';'  shift, and go to state 43
    '+'  shift, and go to state 40


State 37

    4 D: type ':' ID ';' .

    $default  reduce using rule 4 (D)


State 38

   16 E: E . '+' T
   22 F: '(' E . ')'

    ')'  shift, and go to state 44
    '+'  shift, and go to state 40


State 39

   15 ce: '(' E RELOP . E ')'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    E  go to state 45
    T  go to state 29
    F  go to state 30


State 40

   16 E: E '+' . T

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    T  go to state 46
    F  go to state 30


State 41

   18 T: T '*' . F

    NUM  shift, and go to state 25
    ID   shift, and go to state 26
    '('  shift, and go to state 27

    F  go to state 47


State 42

    7 block: '{' SL . '}'

    '}'  shift, and go to state 48


State 43

   11 S: ID '=' E ';' .

    $default  reduce using rule 11 (S)


State 44

   22 F: '(' E ')' .

    $default  reduce using rule 22 (F)


State 45

   15 ce: '(' E RELOP E . ')'
   16 E: E . '+' T

    ')'  shift, and go to state 49
    '+'  shift, and go to state 40


State 46

   16 E: E '+' T .
   18 T: T . '*' F

    '*'  shift, and go to state 41

    $default  reduce using rule 16 (E)


State 47

   18 T: T '*' F .

    $default  reduce using rule 18 (T)


State 48

    7 block: '{' SL '}' .

    $default  reduce using rule 7 (block)


State 49

   15 ce: '(' E RELOP E ')' .

    $default  reduce using rule 15 (ce)
